@model BookFriends.ViewModels.BrowseCommunitiesViewModel

@{
    ViewData["Title"] = "Communities";

}

<div id="browse-communities" class="container">
    <h3>Browse Communities</h3>
    <div id="browse-communities-search-input" class="container">
        <input type="text" class="form-control" placeholder="Find a community.." maxlength="200" v-model="searchQuery" v-on:input="onSearchInputChanged" />
    </div>
    <div id="browse-communities-list" class="container">
        <p class="text-secondary">
            {{ statusText }}
        </p>
        <ul>
            <li class="mt-3 mb-3 media" v-for="listItem in displayedListItems">
                <img class="bf-thumb bf-thumb-l img-thumbnail mr-4" src="~/img/icon-people.svg" alt="icon-people" />
                <div class="media-body">
                    <a v-bind:href="'/Community/View/' + listItem.id">
                        <h5>{{ listItem.name }}</h5>
                    </a>
                    <span class="badge badge-primary">{{ listItem.memberCount }} members</span>
                    <p>{{ listItem.description }}</p>
                </div>
            </li>
        </ul>
        <div class="d-flex justify-content-center" v-if="displayLoadingSpinner">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    </div>
    <div id="browse-communities-next-page-button" class="container text-center">
        <button class="btn btn-success btn-sm" v-on:click="onNextPageClick" v-if="listPage < totalListPages">View More</button>
    </div>
</div>

@section Scripts {
    <script src="~/lib/vue/vue.global.prod.js"></script>
    <script src="~/js/vm/searchable-list-component.js"></script>
    <script>
        const listingsVm = Vue.createApp(searchableListComponent).mount('#browse-communities');
        listingsVm.updateListItems(1, @Json.Serialize(Model.CommunityGroups));
        listingsVm.apiUrl = "/api/communitygroup?";
        listingsVm.totalListPages = @Math.Ceiling((double) Model.TotalCommunityGroups / Model.ListingsPerPage);
        listingsVm.listPageSize = @Model.ListingsPerPage;
        listingsVm.endlessScrolling = true;
        listingsVm.changePage(1);
    </script>
}